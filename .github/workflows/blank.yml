name: Salesforce CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
 
      # 2️⃣ Configurar Node.js (necessário para CLI e scanner)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ Instalar Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli
          sfdx --version

      # 4️⃣ Autenticar na org via JWT
      - name: Authenticate via JWT
        env:
          SF_CLIENT_ID: ${{ secrets.SF_CLIENT_ID }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_SERVERURL: ${{ secrets.SF_SERVERURL }}
          SF_JWT_KEY: ${{ secrets.SF_JWT_KEY }}
        run: |
          echo "$SF_JWT_KEY" > server.key
          chmod 600 server.key
          sfdx force:auth:jwt:grant --clientid $SF_CLIENT_ID --jwtkeyfile server.key --username $SF_USERNAME --instanceurl $SF_SERVERURL
          sfdx force:config:set defaultusername=$SF_USERNAME --global
          sfdx force:org:display

      # 5️⃣ Instalar Salesforce Code Analyzer
      - name: Install Salesforce Code Analyzer
        run: |
          npm install -g @salesforce/sfdx-scanner
          sfscanner --version

      # 6️⃣ Executar análise de código (Code Analyzer)
      - name: Run Salesforce Code Analyzer
        run: |
          sfscanner scan "force-app/main/default/classes" --format sarif --outfile code-analysis.sarif

      # 7️⃣ Upload do SARIF para GitHub Code Scanning
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: code-analysis.sarif

      # 8️⃣ Executar testes Apex e coletar cobertura
      - name: Run Apex Tests with Code Coverage
        run: |
          sfdx force:apex:test:run --resultformat json --codecoverage --wait 20 --outputdir test-results
          cat test-results/test-result.json

      # 9️⃣ Upload dos artefatos de teste
      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: apex-test-results
          path: test-results/
