name: Salesforce CI/CD Pipeline

#on:
 # push:
  #  branches:
   #   - main
  #pull_request:
   # branches:
    #  - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout do reposit√≥rio
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3Ô∏è‚É£ Instalar Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli
          sf --version

      # 4Ô∏è‚É£ Autenticar na org via JWT
      - name: Authenticate via JWT
        env:
          SF_CLIENT_ID: ${{ secrets.SF_CLIENT_ID }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_SERVERURL: ${{ secrets.SF_SERVERURL }}
          SF_JWT_KEY: ${{ secrets.SF_JWT_KEY }}
        run: |
          echo "$SF_JWT_KEY" > server.key
          chmod 600 server.key
          sf auth:jwt:grant --clientid $SF_CLIENT_ID --jwtkeyfile server.key --username $SF_USERNAME --instanceurl $SF_SERVERURL
          sf config:set defaultusername=$SF_USERNAME --global
          sf org:display

      # 5Ô∏è‚É£ Instalar Salesforce Code Analyzer (Scanner)
      - name: Install Salesforce Code Analyzer
        run: |
          npm install -g @salesforce/sfdx-scanner
          export PATH="$(npm bin -g):$PATH"
          sfscanner --version

      # 6Ô∏è‚É£ Executar an√°lise de c√≥digo (gera arquivo SARIF)
      - name: Run Salesforce Code Analyzer
        run: |
          export PATH="$(npm bin -g):$PATH"
          sfscanner scan "force-app/main/default/classes" --format sarif --outfile code-analysis.sarif

      # 8Ô∏è‚É£ Upload do SARIF para GitHub Code Scanning
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: code-analysis.sarif

      # 9Ô∏è‚É£ Executar testes Apex e coletar cobertura
      - name: Run Apex Tests with Code Coverage
        run: |
          sf apex test run --resultformat json --codecoverage --wait 20 --outputdir test-results
          cat test-results/test-result.json

      # üîü Upload dos artefatos de teste
      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apex-test-results
          path: test-results/
